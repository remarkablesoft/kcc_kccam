<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.remarkablesoft.framework.service.notification.message.send.model.impl.MessageSendHistDAO">

	<sql id="messageSendHistColumn">
		OID							oid
		, MSG_OID					messageOid
		, PART_OID				partOid
		, MSG_TYPE					messageType
		, RECEIVER_OID				receiverOid
		
		, RECEIVER_PHONE			receiverPhone
		, RECEIVER_UUID				receiverUuid
		, SUCCESS_YN				successYn
		, ERROR_MSG					errorMessage
		, REPLACE_OID				replaceOid
		
		, OPEN_YN					openYn
		, OPEN_DATE					openDate
		, INPUT_DATE				inputDate
	</sql>

	<sql id="searchCnd">
		<if test="@com.remarkablesoft.framework.util.StringUtils@hasText(oid)"> AND OID = #{oid} </if>
		<if test="@com.remarkablesoft.framework.util.StringUtils@hasText(messageOid)"> AND MSG_OID = #{messageOid} </if>
		<if test="@com.remarkablesoft.framework.util.StringUtils@hasText(partOid)"> AND PART_OID = #{partOid} </if>
		<if test="@com.remarkablesoft.framework.util.StringUtils@hasText(messageType)"> AND MSG_TYPE = #{messageType} </if>
		<if test="@com.remarkablesoft.framework.util.StringUtils@hasText(receiverOid)"> AND RECEIVER_OID = #{receiverOid} </if>
		
		<if test="@com.remarkablesoft.framework.util.StringUtils@hasText(receiverPhone)"> AND RECEIVER_PHONE = #{receiverPhone} </if>
		<if test="@com.remarkablesoft.framework.util.StringUtils@hasText(receiverUuid)"> AND RECEIVER_UUID = #{receiverUuid} </if>
		<if test="@com.remarkablesoft.framework.util.StringUtils@hasText(successYn)"> AND SUCCESS_YN = #{successYn} </if>
		<if test="@com.remarkablesoft.framework.util.StringUtils@hasText(replaceOid)"> AND REPLACE_OID = #{replaceOid} </if>
		<if test="@com.remarkablesoft.framework.util.StringUtils@hasText(openYn)"> AND OPEN_YN = #{openYn} </if>

		<if test="@com.remarkablesoft.framework.util.CollectionUtils@isNotEmpty(messageOidList)">
			AND MSG_OID IN
			<foreach collection="messageOidList" item="messageOid" index="index" separator="," open="(" close=")">
				#{messageOid}
			</foreach>
		</if>
	</sql>

	<insert id="insert" parameterType="com.remarkablesoft.framework.service.notification.message.send.vo.MessageSendHistInfo">
		/* com.remarkablesoft.framework.service.notification.message.send.model.impl.MessageSendHistDAO.insert(MessageSendHistInfo) ||'최원준'|| '2019-12-06' */
		INSERT INTO TS02_TB_MSG_SEND_HIST
		(
			OID
			, MSG_OID
			, PART_OID
			, MSG_TYPE
			, RECEIVER_OID
			
			, RECEIVER_PHONE
			, RECEIVER_UUID
			, SUCCESS_YN
			, ERROR_MSG
			, REPLACE_OID
			
			, OPEN_YN
			, OPEN_DATE
			, INPUT_DATE
		)
		VALUES
		(
			#{oid}
			, #{messageOid}
			, #{partOid}
			, #{messageType}			
			, #{receiverOid}
			
			, #{receiverPhone}
			, #{receiverUuid}
			, #{successYn}
			, #{errorMessage}
			, #{replaceOid}

			, #{openYn}
			, #{openDate}
			, #{inputDate}
		)

	</insert>

 	<update id="update" parameterType="com.remarkablesoft.framework.service.notification.message.send.vo.MessageSendHistInfo">
 		/* com.remarkablesoft.framework.service.notification.message.send.model.impl.MessageSendHistDAO.update(MessageSendHistInfo) ||'최원준'|| '2019-12-06' */
 		UPDATE TS02_TB_MSG_SEND_HIST
 		<trim prefix="SET" suffixOverrides=",">
 			<if test="@com.remarkablesoft.framework.util.StringUtils@hasText(successYn)"> SUCCESS_YN = #{successYn}, </if>
 			<if test="@com.remarkablesoft.framework.util.StringUtils@hasText(openYn)"> OPEN_YN = #{openYn}, </if>
 			<if test="@com.remarkablesoft.framework.util.StringUtils@hasText(errorMessage)"> ERROR_MSG = #{errorMessage}, </if>

 			<if test="openDate != null"> OPEN_DATE = #{openDate}, </if>
 		</trim>
		WHERE 1=1
			AND OID = #{oid}
 	</update>

 	<delete id="delete" parameterType="com.remarkablesoft.framework.service.notification.message.send.vo.MessageSendHistCnd">
 		/* com.remarkablesoft.framework.service.notification.message.send.model.impl.MessageSendHistDAO.delete(MessageSendHistCnd) ||'최원준'|| '2019-12-06' */
 		DELETE FROM TS02_TB_MSG_SEND_HIST
 		WHERE OID = #{oid}
 	</delete>

	<select id="list" parameterType="com.remarkablesoft.framework.service.notification.message.send.vo.MessageSendHistCnd" resultType="com.remarkablesoft.framework.service.notification.message.send.vo.MessageSendHistInfo">
		/* com.remarkablesoft.framework.service.notification.message.send.model.impl.MessageSendHistDAO.list(MessageSendHistCnd) ||'최원준'|| '2019-12-06' */
		SELECT
			<include refid="messageSendHistColumn"/>
		FROM TS02_TB_MSG_SEND_HIST
		WHERE 1=1
			<include refid="searchCnd"/>
		ORDER BY INPUT_DATE DESC
		LIMIT #{startIndexBaseZero}, #{pageSize}
	</select>

	<select id="list_count" parameterType="com.remarkablesoft.framework.service.notification.message.send.vo.MessageSendHistCnd" resultType="int">
		SELECT
			COUNT(*)
		FROM TS02_TB_MSG_SEND_HIST
		WHERE 1=1
			<include refid="searchCnd"/>
	</select>

	<select id="listAll" parameterType="com.remarkablesoft.framework.service.notification.message.send.vo.MessageSendHistCnd" resultType="com.remarkablesoft.framework.service.notification.message.send.vo.MessageSendHistInfo">
		/* com.remarkablesoft.framework.service.notification.message.send.model.impl.MessageSendHistDAO.listAll(MessageSendHistCnd) ||'최원준'|| '2019-12-06' */
		SELECT
			<include refid="messageSendHistColumn"/>
		FROM TS02_TB_MSG_SEND_HIST
		WHERE 1=1
			<include refid="searchCnd"/>
	</select>

	<select id="listByGroupByMsgOid" parameterType="com.remarkablesoft.framework.service.notification.message.send.vo.MessageSendHistCnd" resultType="com.remarkablesoft.framework.service.notification.message.send.vo.MessageSendHistInfo">
		/* com.remarkablesoft.framework.service.notification.message.send.model.impl.MessageSendHistDAO.listByGroupByMsgOid(MessageSendHistCnd) ||'최원준'|| '2019-12-06' */
		SELECT
			<include refid="messageSendHistColumn"/>
		FROM TS02_TB_MSG_SEND_HIST
		WHERE 1=1
			<include refid="searchCnd"/>
		GROUP BY MSG_OID
	</select>

</mapper>