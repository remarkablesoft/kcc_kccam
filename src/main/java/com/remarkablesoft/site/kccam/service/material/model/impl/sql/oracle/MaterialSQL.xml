<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.remarkablesoft.site.kccam.service.material.model.impl.MaterialDAO">

	<sql id="selectColumn">
		OID							oid
		, SYSTEM_OID				systemOid
		, LANG						lang
		, NAME						name
		, CLASS_NAME				className
		, DESCR						descr

		, INPUT_USER				inputUser
		, INPUT_DATE				inputDate
		, MOD_USER					modUser
		, MOD_DATE					modDate
	</sql>

	<sql id="searchCnd">
		<if test="@com.remarkablesoft.framework.util.StringUtils@hasText(oid)"> AND OID = #{oid} </if>
		<if test="@com.remarkablesoft.framework.util.StringUtils@hasText(lang)"> AND LANG = #{lang} </if>
		<if test="@com.remarkablesoft.framework.util.StringUtils@hasText(systemOid)"> AND SYSTEM_OID = #{systemOid} </if>
		<if test="@com.remarkablesoft.framework.util.StringUtils@hasText(name)"> AND NAME = #{name} </if>
		<if test="@com.remarkablesoft.framework.util.StringUtils@hasText(className)"> AND CLASS_NAME = #{className} </if>
		<if test="@com.remarkablesoft.framework.util.StringUtils@hasText(inputUser)"> AND INPUT_USER = #{inputUser} </if>

		 <if test="@com.remarkablesoft.framework.util.CollectionUtils@isNotEmpty(oidList)">
			 AND OID IN
			 <foreach collection="oidList" item="oid" index="index" separator="," open="(" close=")">
				 #{oid}
			 </foreach>
		 </if>
	</sql>

	<insert id="insert" parameterType="com.remarkablesoft.site.kccam.service.material.vo.MaterialInfo">
		/* com.remarkablesoft.site.kccam.service.material.model.impl.MaterialDAO.insert(MaterialInfo) ||'김웅기'|| '2021-05-25' */
		INSERT INTO TS02_AM_MATERIAL
		(
			OID
			, SYSTEM_OID
		)
		VALUES
		(
			#{oid}
			, #{systemOid}
		)
	</insert>

	<update id="update" parameterType="com.remarkablesoft.site.kccam.service.material.vo.MaterialInfo">
		/* com.remarkablesoft.site.kccam.service.material.model.impl.MaterialDAO.update(MaterialInfo) ||'김웅기'|| '2021-05-25' */
		UPDATE TS02_AM_MATERIAL
		<trim prefix="SET" suffixOverrides=",">
			<if test="@com.remarkablesoft.framework.util.StringUtils@hasText(systemOid)">  SYSTEM_OID = #{systemOid}, </if>
		</trim>
		WHERE 1=1
		  AND OID = #{oid}
	</update>

	<select id="get" parameterType="com.remarkablesoft.site.kccam.service.material.vo.MaterialCnd" resultType="com.remarkablesoft.site.kccam.service.material.vo.MaterialInfo">
		/* com.remarkablesoft.site.kccam.service.material.model.impl.MaterialDAO.get(MaterialInfo) ||'김웅기'|| '2021-05-25' */
		SELECT
			<include refid="selectColumn"/>
		FROM VS02_MATERIAL
		WHERE 1=1
			<include refid="searchCnd"/>
	</select>

	<select id="list" parameterType="com.remarkablesoft.site.kccam.service.material.vo.MaterialCnd" resultType="com.remarkablesoft.site.kccam.service.material.vo.MaterialInfo">
		/* com.remarkablesoft.site.kccam.service.material.model.impl.MaterialDAO.list(MaterialInfo) ||'김웅기'|| '2021-05-25' */
		SELECT * FROM 
		(
			SELECT
				ROW_NUMBER() OVER( ORDER BY INPUT_DATE DESC ) RNUM,
				<include refid="selectColumn"/>
			FROM VS02_MATERIAL
			WHERE 1=1
				<include refid="searchCnd"/>
		) X
		WHERE RNUM BETWEEN ( #{startIndex} ) AND ( #{startIndex} + #{pageSize} )
	</select>

	<select id="list_count" parameterType="com.remarkablesoft.site.kccam.service.material.vo.MaterialCnd" resultType="int">
		SELECT COUNT(*)
		FROM VS02_MATERIAL
		WHERE 1=1
			<include refid="searchCnd"/>
	</select>

	<select id="listAll" parameterType="com.remarkablesoft.site.kccam.service.material.vo.MaterialCnd" resultType="com.remarkablesoft.site.kccam.service.material.vo.MaterialInfo">
		/* com.remarkablesoft.site.kccam.service.material.model.impl.MaterialDAO.list(MaterialInfo) ||'김웅기'|| '2021-05-25' */
		SELECT
			<include refid="selectColumn"/>
		FROM VS02_MATERIAL
		WHERE 1=1
			<include refid="searchCnd"/>
	</select>

	<delete id="delete" parameterType="string">
		/* com.remarkablesoft.site.kccam.service.material.model.impl.MaterialDAO.list(MaterialInfo) ||'김웅기'|| '2021-05-25' */
		DELETE
		FROM VS02_MATERIAL
		WHERE 1 = 1
		AND	OID = #{oid}
	</delete>

</mapper>
